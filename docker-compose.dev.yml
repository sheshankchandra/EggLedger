# Docker Compose for Development Environment
# This version includes development settings and volume mounts for hot reloading

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: eggledger
      POSTGRES_USER: eggledger
      POSTGRES_PASSWORD: eggledger123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - eggledger-network

  # EggLedger API (Development)
  api:
    build:
      context: .
      dockerfile: EggLedger.API/Dockerfile
      target: base
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=eggledger;Username=eggledger;Password=eggledger123
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - ./EggLedger.API:/app
      - ./EggLedger.Data:/src/EggLedger.Data
      - ./EggLedger.Models:/src/EggLedger.Models
      - ./EggLedger.DTO:/src/EggLedger.DTO
      - ./EggLedger.Services:/src/EggLedger.Services
      - ./EggLedger.ServiceDefaults:/src/EggLedger.ServiceDefaults
    depends_on:
      - postgres
    networks:
      - eggledger-network

  # EggLedger Client (Development with hot reload)
  client-dev:
    build:
      context: ./EggLedger.Client
      dockerfile: Dockerfile
      target: build
    ports:
      - "5173:5173"
    volumes:
      - ./EggLedger.Client:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8080
    command: npm run dev -- --host
    depends_on:
      - api
    networks:
      - eggledger-network

volumes:
  postgres_data:

networks:
  eggledger-network:
    driver: bridge
