# This version includes production-optimized settings

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: eggledger-postgres
    environment:
      POSTGRES_DB: eggledgerDB
      POSTGRES_USER: eggledger
      POSTGRES_PASSWORD: eggledger123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - eggledger-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eggledger -d eggledgerDB"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # pgAdmin Client
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@eggledger.com
      PGADMIN_DEFAULT_PASSWORD: eggledger123
    volumes:
      - postgres_data:/var/lib/pgadmin/data
    ports:
      - "5050:5050"
    depends_on:
      - postgres
    networks:
      - eggledger-network
    restart: unless-stopped

  # EggLedger API
  api:
    build:
      context: .
      dockerfile: EggLedger.API/Dockerfile
    container_name: eggledger-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_HTTP_PORTS=8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - eggledger-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # EggLedger Client
  client:
    build:
      context: ./EggLedger.Client
      dockerfile: Dockerfile
      target: production
    container_name: eggledger-client
    user: root
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8080
    depends_on:
      - api
    networks:
      - eggledger-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  postgres_data:

networks:
  eggledger-network:
    driver: bridge
